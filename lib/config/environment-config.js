"use strict";
// lib/config/environment-config.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.commonDefaults = void 0;
// 共通のデフォルト設定
exports.commonDefaults = {
    network: {
        availabilityZones: ['us-west-2a', 'us-west-2c'],
        createVpcEndpoints: false,
        naming: {
            // 基本形（環境名は各configで上書き）
            vpcName: 'cpi-bedrock-vpc',
            publicSubnetName: 'cpi-bedrock-public',
            privateSubnetName: 'cpi-bedrock-private',
            auroraSecurityGroupName: 'cpi-bedrock-aurora-sg',
            lambdaSecurityGroupName: 'cpi-bedrock-lambda-sg',
        },
    },
    aurora: {
        masterUsername: 'bedrockadmin',
        enableDataApi: true,
        enableCloudwatchLogs: true,
        enablePerformanceInsights: false,
        naming: {
            clusterName: 'cpi-bedrock-cluster',
            subnetGroupName: 'cpi-bedrock-subnet-group',
            masterSecretName: 'cpi-bedrock-master-secret',
            appUserSecretName: 'cpi-bedrock-app-secret',
        },
    },
    security: {
        allowedCidrBlocks: ['10.0.0.0/16'],
        enableGuardDuty: false,
    },
    tags: {
        Project: 'bedrock-vector-db',
        ManagedBy: 'cdk',
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW52aXJvbm1lbnQtY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZW52aXJvbm1lbnQtY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7OztBQTZEbkMsYUFBYTtBQUNBLFFBQUEsY0FBYyxHQUFHO0lBQzVCLE9BQU8sRUFBRTtRQUNQLGlCQUFpQixFQUFFLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQztRQUMvQyxrQkFBa0IsRUFBRSxLQUFLO1FBQ3pCLE1BQU0sRUFBRTtZQUNOLHVCQUF1QjtZQUN2QixPQUFPLEVBQUUsaUJBQWlCO1lBQzFCLGdCQUFnQixFQUFFLG9CQUFvQjtZQUN0QyxpQkFBaUIsRUFBRSxxQkFBcUI7WUFDeEMsdUJBQXVCLEVBQUUsdUJBQXVCO1lBQ2hELHVCQUF1QixFQUFFLHVCQUF1QjtTQUNqRDtLQUNGO0lBQ0QsTUFBTSxFQUFFO1FBQ04sY0FBYyxFQUFFLGNBQWM7UUFDOUIsYUFBYSxFQUFFLElBQUk7UUFDbkIsb0JBQW9CLEVBQUUsSUFBSTtRQUMxQix5QkFBeUIsRUFBRSxLQUFLO1FBQ2hDLE1BQU0sRUFBRTtZQUNOLFdBQVcsRUFBRSxxQkFBcUI7WUFDbEMsZUFBZSxFQUFFLDBCQUEwQjtZQUMzQyxnQkFBZ0IsRUFBRSwyQkFBMkI7WUFDN0MsaUJBQWlCLEVBQUUsd0JBQXdCO1NBQzVDO0tBQ0Y7SUFDRCxRQUFRLEVBQUU7UUFDUixpQkFBaUIsRUFBRSxDQUFDLGFBQWEsQ0FBQztRQUNsQyxlQUFlLEVBQUUsS0FBSztLQUN2QjtJQUNELElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsU0FBUyxFQUFFLEtBQUs7S0FDakI7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL2NvbmZpZy9lbnZpcm9ubWVudC1jb25maWcudHNcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRW52aXJvbm1lbnRDb25maWcge1xyXG4gIGVudmlyb25tZW50OiAnZGV2JyB8ICdzdGFnaW5nJyB8ICdwcm9kJztcclxuICBcclxuICAvLyDjg43jg4Pjg4jjg6/jg7zjgq/oqK3lrppcclxuICBuZXR3b3JrOiB7XHJcbiAgICB2cGNDaWRyOiBzdHJpbmc7XHJcbiAgICBlbmFibGVOYXRHYXRld2F5OiBib29sZWFuO1xyXG4gICAgYXZhaWxhYmlsaXR5Wm9uZXM6IHN0cmluZ1tdO1xyXG4gICAgY3JlYXRlVnBjRW5kcG9pbnRzOiBib29sZWFuO1xyXG4gICAgXHJcbiAgICAvLyDlkI3liY3oqK3lrppcclxuICAgIG5hbWluZzoge1xyXG4gICAgICB2cGNOYW1lOiBzdHJpbmc7XHJcbiAgICAgIHB1YmxpY1N1Ym5ldE5hbWU6IHN0cmluZztcclxuICAgICAgcHJpdmF0ZVN1Ym5ldE5hbWU6IHN0cmluZztcclxuICAgICAgYXVyb3JhU2VjdXJpdHlHcm91cE5hbWU6IHN0cmluZztcclxuICAgICAgbGFtYmRhU2VjdXJpdHlHcm91cE5hbWU6IHN0cmluZztcclxuICAgIH07XHJcbiAgfTtcclxuICBcclxuICAvLyBBdXJvcmHoqK3lrppcclxuICBhdXJvcmE6IHtcclxuICAgIGRhdGFiYXNlTmFtZTogc3RyaW5nO1xyXG4gICAgbWFzdGVyVXNlcm5hbWU6IHN0cmluZztcclxuICAgIG1pbkNhcGFjaXR5OiBudW1iZXI7XHJcbiAgICBtYXhDYXBhY2l0eTogbnVtYmVyO1xyXG4gICAgZW5hYmxlRGF0YUFwaTogYm9vbGVhbjtcclxuICAgIGRlbGV0aW9uUHJvdGVjdGlvbjogYm9vbGVhbjtcclxuICAgIGJhY2t1cFJldGVudGlvbkRheXM6IG51bWJlcjtcclxuICAgIGVuYWJsZUNsb3Vkd2F0Y2hMb2dzOiBib29sZWFuO1xyXG4gICAgZW5hYmxlUGVyZm9ybWFuY2VJbnNpZ2h0czogYm9vbGVhbjtcclxuICAgIFxyXG4gICAgLy8g5ZCN5YmN6Kit5a6aXHJcbiAgICBuYW1pbmc6IHtcclxuICAgICAgY2x1c3Rlck5hbWU6IHN0cmluZztcclxuICAgICAgc3VibmV0R3JvdXBOYW1lOiBzdHJpbmc7XHJcbiAgICAgIG1hc3RlclNlY3JldE5hbWU6IHN0cmluZztcclxuICAgIH07XHJcbiAgfTtcclxuICBcclxuICAvLyDjgrvjgq3jg6Xjg6rjg4bjgqPoqK3lrppcclxuICBzZWN1cml0eToge1xyXG4gICAgZW5hYmxlVnBjRmxvd0xvZ3M6IGJvb2xlYW47XHJcbiAgICBhbGxvd2VkQ2lkckJsb2Nrczogc3RyaW5nW107XHJcbiAgICBlbmFibGVHdWFyZER1dHk6IGJvb2xlYW47XHJcbiAgfTtcclxuICBcclxuICAvLyDlhbHpgJrjgr/jgrBcclxuICB0YWdzOiB7XHJcbiAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XHJcbiAgfTtcclxuICBcclxuICAvLyDjgrPjgrnjg4jnrqHnkIZcclxuICBjb3N0OiB7XHJcbiAgICBidWRnZXRMaW1pdFVzZDogbnVtYmVyO1xyXG4gICAgZW5hYmxlQnVkZ2V0QWxlcnRzOiBib29sZWFuO1xyXG4gIH07XHJcbn1cclxuXHJcbi8vIOWFsemAmuOBruODh+ODleOCqeODq+ODiOioreWumlxyXG5leHBvcnQgY29uc3QgY29tbW9uRGVmYXVsdHMgPSB7XHJcbiAgbmV0d29yazoge1xyXG4gICAgYXZhaWxhYmlsaXR5Wm9uZXM6IFsndXMtd2VzdC0yYScsICd1cy13ZXN0LTJjJ10sXHJcbiAgICBjcmVhdGVWcGNFbmRwb2ludHM6IGZhbHNlLFxyXG4gICAgbmFtaW5nOiB7XHJcbiAgICAgIC8vIOWfuuacrOW9ou+8iOeSsOWig+WQjeOBr+WQhGNvbmZpZ+OBp+S4iuabuOOBje+8iVxyXG4gICAgICB2cGNOYW1lOiAnY3BpLWJlZHJvY2stdnBjJyxcclxuICAgICAgcHVibGljU3VibmV0TmFtZTogJ2NwaS1iZWRyb2NrLXB1YmxpYycsXHJcbiAgICAgIHByaXZhdGVTdWJuZXROYW1lOiAnY3BpLWJlZHJvY2stcHJpdmF0ZScsXHJcbiAgICAgIGF1cm9yYVNlY3VyaXR5R3JvdXBOYW1lOiAnY3BpLWJlZHJvY2stYXVyb3JhLXNnJyxcclxuICAgICAgbGFtYmRhU2VjdXJpdHlHcm91cE5hbWU6ICdjcGktYmVkcm9jay1sYW1iZGEtc2cnLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIGF1cm9yYToge1xyXG4gICAgbWFzdGVyVXNlcm5hbWU6ICdiZWRyb2NrYWRtaW4nLFxyXG4gICAgZW5hYmxlRGF0YUFwaTogdHJ1ZSxcclxuICAgIGVuYWJsZUNsb3Vkd2F0Y2hMb2dzOiB0cnVlLFxyXG4gICAgZW5hYmxlUGVyZm9ybWFuY2VJbnNpZ2h0czogZmFsc2UsXHJcbiAgICBuYW1pbmc6IHtcclxuICAgICAgY2x1c3Rlck5hbWU6ICdjcGktYmVkcm9jay1jbHVzdGVyJyxcclxuICAgICAgc3VibmV0R3JvdXBOYW1lOiAnY3BpLWJlZHJvY2stc3VibmV0LWdyb3VwJyxcclxuICAgICAgbWFzdGVyU2VjcmV0TmFtZTogJ2NwaS1iZWRyb2NrLW1hc3Rlci1zZWNyZXQnLFxyXG4gICAgICBhcHBVc2VyU2VjcmV0TmFtZTogJ2NwaS1iZWRyb2NrLWFwcC1zZWNyZXQnLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIHNlY3VyaXR5OiB7XHJcbiAgICBhbGxvd2VkQ2lkckJsb2NrczogWycxMC4wLjAuMC8xNiddLFxyXG4gICAgZW5hYmxlR3VhcmREdXR5OiBmYWxzZSxcclxuICB9LFxyXG4gIHRhZ3M6IHtcclxuICAgIFByb2plY3Q6ICdiZWRyb2NrLXZlY3Rvci1kYicsXHJcbiAgICBNYW5hZ2VkQnk6ICdjZGsnLFxyXG4gIH0sXHJcbn07Il19